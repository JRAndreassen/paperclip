#![allow(clippy::too_many_arguments, clippy::new_without_default, non_camel_case_types, unused_imports)]
/*
 * IoEngine RESTful API
 *
 * The version of the OpenAPI document: v0
 *
 * Generated by: https://github.com/openebs/openapi-generator
 */

use crate::apis::{IntoOptVec, IntoVec};




/// VolumeTarget : Specification of a volume target









/// Specification of a volume target
#[derive(Clone, Debug, Default, Eq, PartialEq, Serialize, Deserialize)]
pub struct VolumeTarget {

    
    /// The node where front-end IO will be sent to
    #[serde(rename = "node")]
    pub node: String,

    
    /// Volume Share Protocol
    #[serde(rename = "protocol", skip_serializing_if = "Option::is_none")]
    pub protocol: Option<crate::models::VolumeShareProtocol>,

}

impl VolumeTarget {
    /// VolumeTarget using only the required fields
    pub fn new(node: impl Into<String>) -> VolumeTarget {
        VolumeTarget {
            
            node: node.into(),
            
            protocol: None,
            
        }
    }
    /// VolumeTarget using all fields
    pub fn new_all(node: impl Into<String>, protocol: impl Into<Option<crate::models::VolumeShareProtocol>>) -> VolumeTarget {
        VolumeTarget {
            
            node: node.into(),
            
            protocol: protocol.into(),
            
        }
    }
}












